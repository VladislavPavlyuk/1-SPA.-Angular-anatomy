{"ast":null,"code":"// Данный модуль является входной точкой в приложение.\n// С помощью директив import импортируется ряд необходимых модулей.\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core'; // функциональность декоратора NgModule для создания текущего модуля\nimport { BrowserModule } from '@angular/platform-browser'; // модуль, необходимый для работы с браузером\nimport { FormsModule } from '@angular/forms'; // модуль, необходимый для работы с формами html\nimport { AppComponent } from './app.component'; // функциональность корневого компонента приложения\nimport { BioChildComponent } from './bio.child.component';\nimport { QuotesChildComponent } from './quotes.child.component';\nimport { LinksChildComponent } from './links.child.component';\n// Функция-декоратор @NgModule ассоциирует метаданные с классом модуля AppModule.\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  imports: [BrowserModule, FormsModule],\n  declarations: [AppComponent, LinksChildComponent, BioChildComponent, QuotesChildComponent],\n  bootstrap: [AppComponent] // корневой компонент, который вызывается по умолчанию при загрузке приложения\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}