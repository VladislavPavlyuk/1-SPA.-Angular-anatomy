{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// Директива import импортирует функциональность модуля angular/core, \n// предоставляя доступ к функции декоратора @Component.\nimport { Component, Input } from '@angular/core';\n// Функция-декоратор @Component ассоциирует метаданные с классом компонента AppComponent.\n// Декоратор @Component позволяет идентифицировать класс AppComponent как компонент.\nlet QuotesChildComponent = class QuotesChildComponent {\n  quotes = [];\n};\n__decorate([Input()], QuotesChildComponent.prototype, \"quotes\", void 0);\nQuotesChildComponent = __decorate([Component({\n  selector: 'quotes-child-comp',\n  template: `\n\t\t<p>\"Patience is a key element of success\"</p><br />\n    <p>\"If you think your teacher is tough, wait till you get a boss\"</p><br />\n    <p>\"Life is not fair — get used to it! \"</p><br />\n    <p>\"Success is a lousy teacher. It seduces smart people into thinking they can’t lose\"</p><br />\n\t\t<p>\"Be nice to nerds. Chances are you’ll end up working for one\"</p><br />\n\t\t<p *ngFor=\"let quote of quotes>\"{{quote}}\"></p><br />\n\t\t\t\t\t\t\t`\n})], QuotesChildComponent);\nexport { QuotesChildComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}