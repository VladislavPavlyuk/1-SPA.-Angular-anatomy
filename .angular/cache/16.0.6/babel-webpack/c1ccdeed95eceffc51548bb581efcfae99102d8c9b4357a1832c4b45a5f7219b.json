{"ast":null,"code":"/**\r\n *\r\n * @param {Error} error\r\n */\nfunction parseErrorToStacks(error) {\n  if (!error || !(error instanceof Error)) {\n    throw new Error(\"parseErrorToStacks expects Error object\");\n  }\n  if (typeof error.stack === \"string\") {\n    return error.stack.split(\"\\n\").filter(function (stack) {\n      return stack !== \"Error: \".concat(error.message);\n    });\n  }\n}\n\n/**\r\n * @callback ErrorCallback\r\n * @param {ErrorEvent} error\r\n * @returns {void}\r\n */\n\n/**\r\n * @param {ErrorCallback} callback\r\n */\nfunction listenToRuntimeError(callback) {\n  window.addEventListener(\"error\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"error\", callback);\n  };\n}\nexport { listenToRuntimeError, parseErrorToStacks };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}